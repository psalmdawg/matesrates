<form id="newjobform" action="/jobs" method="post" >
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    What type of Job are you posting? (Required)


  <select name="job_type_id" id="">
    <option disabled selected value=""></option>
    <%= options_from_collection_for_select(JobType.all, :id, :name, :include_blank => "Placeholder" ) %>
  </select>
    <hr/>
    Job Title: <input type="text" name="title">
    Job Description: <input type="text" name="description">
    How much will you offer? <input type="text" name="price">
    When do you need it done by? <input type="text" name="timeframe">
    <!-- Where is the job? Enter your postcode<input type="text" name="location"><br> -->

<br/>
<br/>

  <p>Where is the job? Your full address WILL remain hidden, and only used for area specific searches </p>
    <div id="locationField">
      <label for="">Search for your address </label><input id="autocomplete" placeholder="Search..."
             onFocus="geolocate()" type="text"></input>
    </div>
<br/>
    <div id="address">
      <input class="field" type="hidden" id="street_number" name="street_number" placeholder="Street number"></input>
      <input class="field" type="hidden" id="route" name = "street" placeholder="Street"></input>
      <input class="field" id="locality" name = "suburb" placeholder="Suburb"></input>
      <input class="field" id="administrative_area_level_1" name="state" placeholder="State"></input>
      <input class="field" id="postal_code" name="postcode" placeholder="Postcode"></input>
      <input class="field" id="country" name="country" placeholder="Country"></input>
    </div>
    <br/>
    <button>CREATE</button>

  </form>
    <script>

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCgv2nF9cSyCe8iy0UW7YtTiB3FpprBl4c&libraries=places&callback=initAutocomplete"
        async defer></script>
