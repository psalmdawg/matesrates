
<h1>Editing job</h1>
job ID: <%=@job.id%>
<%= form_for @job do |f| %>

<% if @job.errors.any? %>
   <div id="error_explanation">
     <h2>
       <%= pluralize(@job.errors.count, "error") %> prohibited
       this article from being saved:
     </h2>
     <ul>
       <% @job.errors.full_messages.each do |msg| %>
         <li><%= msg %></li>
       <% end %>
     </ul>
   </div>
 <% end %>
 Please choose a category


 <select name="job_type_id" id="">
  <option value="">Please select...</option>

   <%= options_from_collection_for_select(JobType.all, :id, :name ) %>

 </select>

<br/>
   <label for="">Job Name</label>
   <input type="text" name="title" value = "<%= @job.title %>">
<br/>
   <label for="">Job Description</label>
   <input type="text" name="description" value = "<%= @job.description %>">
<br/>
   <label for="">how much offered for the job?</label>
   <input type="text" name="price" value = "<%= @job.price %>">
<br/>
   <label for="">When do you need this done by?</label>
   <input type="text" name="timeframe" value = "<%= @job.timeframe %>">
<br/>
<!-- <%= f.submit %>

<% end %> -->
<!-- google autocomplete -->

  <body>
    <div id="locationField">
      <input id="autocomplete" placeholder="where is the job?"
             onFocus="geolocate()" type="text"></input>
    </div>

    <div id="address">
      <input class="field" id="street_number" name="street_number" disabled="true"></input>
      <input class="field" id="route" name = "street" disabled="true"></input>
      <input class="field" id="locality" name = "suburb" disabled="true"></input>
      <input class="field" id="administrative_area_level_1" name="state" disabled="true"></input></td>
      <input class="field" id="postal_code" name="postcode" disabled="true"></input>
      <input class="field" id="country" name="country" disabled="true"></input></td>
    </div>
    <button>Submit</button>

  </form>
    <script>

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCgv2nF9cSyCe8iy0UW7YtTiB3FpprBl4c&libraries=places&callback=initAutocomplete"
        async defer></script>



<br/>
<form action="/jobs/<%= @job.id %>" method="post">
<input type="hidden" value="delete" name="_method">
  <%=hidden_field_tag :authenticity_token, form_authenticity_token %>
<button>delete job?</button>
</form>
<a href = "/profile">Back</a>
